{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAASC,SAASC,cAAc,SACtBD,SAASC,cAAc,6BACxBD,SAASC,cAAc,4BACrBD,SAASC,cAAc,8BACtBD,SAASC,cAAc,+BAuBzC,SAASC,EAAcC,EAAUC,GAW/B,OAVgB,IAAIC,SAAQ,SAACC,EAAKC,GAChC,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAI,CAAEH,WAAUC,UAEhBG,EAAI,CAAEJ,WAAUC,S,GAEjBA,E,IA9BPL,EAAOa,iBAAiB,UAExB,SAAsBC,GACpBA,EAAMC,iBAGN,IAFA,IAAgCC,EAAAF,EAAMG,OAAOC,SAArCC,EAAwBH,EAAxBX,MAAOe,EAAiBJ,EAAjBI,KAAMC,EAAWL,EAAXK,OACjBC,GAAcH,EAAMI,MACfC,EAAW,EAAGA,GAAYH,EAAOE,MAAOC,GAAY,EAC3DrB,EAAcqB,EAAUF,GACrBG,MAAK,SAAAC,G,IAAGtB,EAAQsB,EAARtB,SAAUC,EAAKqB,EAALrB,MACjBsB,EAAA7B,GAAS8B,OAAOC,QACd,uBAAwCC,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,M,IAGjD0B,OAAM,SAAAL,G,IAAGtB,EAAQsB,EAARtB,SAAUC,EAAKqB,EAALrB,MAClBsB,EAAA7B,GAAS8B,OAAOI,QACd,sBAAqCF,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,M,IAGjDiB,IAAeF,EAAKG,K","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('.form');\nconst delayEl = document.querySelector('.form input[name=\"delay\"]');\nconst stepEl = document.querySelector('.form input[name=\"step\"]');\nconst amountEl = document.querySelector('.form input[name=\"amount\"]');\nconst submitBtn = document.querySelector('.form button[type=\"submit\"]');\n\nformEl.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n  const { delay, step, amount } = event.target.elements;\n  let delayValue = +delay.value;\n  for (let position = 1; position <= amount.value; position += 1) {\n    createPromise(position, delayValue)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    delayValue += +step.value;\n  }\n}\nfunction createPromise(position, delay) {\n  const promise = new Promise((res, rej) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        res({ position, delay });\n      } else {\n        rej({ position, delay });\n      }\n    }, delay);\n  });\n  return promise;\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$formEl","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","res","rej","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","_elements","target","elements","delay1","step","amount","delayValue","value","position1","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.955f0281.js.map"}